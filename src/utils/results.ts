import { superpowers, typeCompatibility } from '../data/superpowers';
import { Option, SuperpowerType, TestResult, Compatibility } from '../types';

/**
 * –û–ø—Ä–µ–¥–µ–ª—è–µ—Ç —Ç–∏–ø —Å–≤–µ—Ä—Ö—Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–∏ –Ω–∞ –æ—Å–Ω–æ–≤–µ –æ—Ç–≤–µ—Ç–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
 * @param {Array} answers - –º–∞—Å—Å–∏–≤ –æ—Ç–≤–µ—Ç–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
 * @returns {SuperpowerType} - —Ç–∏–ø —Å–≤–µ—Ä—Ö—Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–∏
 */
export function determinePersonalityType(answers: Option[]): SuperpowerType {
  // –ü–æ–¥—Å—á–µ—Ç –æ—á–∫–æ–≤ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ —Ç–∏–ø–∞
  const scores: Record<SuperpowerType, number> = {
    emotionalTelepatia: 0,
    magneticAttraction: 0,
    relationshipAlchemy: 0,
    soulHealer: 0,
    wisdomKeeper: 0,
    specialMomentCreator: 0,
    impossibilityMaster: 0
  };
  
  // –ü–æ–¥—Å—á–µ—Ç –æ—á–∫–æ–≤ –Ω–∞ –æ—Å–Ω–æ–≤–µ –æ—Ç–≤–µ—Ç–æ–≤
  answers.forEach(answer => {
    if (answer && answer.type) {
      scores[answer.type] += 1;
    }
  });
  
  // –ù–∞—Ö–æ–¥–∏–º —Ç–∏–ø —Å –Ω–∞–∏–±–æ–ª—å—à–∏–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ–º –æ—á–∫–æ–≤
  let maxScore = 0;
  let resultType: SuperpowerType = 'emotionalTelepatia'; // –ó–Ω–∞—á–µ–Ω–∏–µ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
  
  Object.entries(scores).forEach(([type, score]) => {
    if (score > maxScore) {
      maxScore = score;
      resultType = type as SuperpowerType;
    }
  });
  
  return resultType;
}

/**
 * –ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –ø–æ–ª–Ω—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
 * @param {SuperpowerType} type - —Ç–∏–ø —Å–≤–µ—Ä—Ö—Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–∏
 * @returns {TestResult} - –æ–±—ä–µ–∫—Ç —Å –ø–æ–ª–Ω—ã–º –æ–ø–∏—Å–∞–Ω–∏–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞
 */
export function generateResult(type: SuperpowerType): TestResult {
  const superpower = superpowers[type];
  
  if (!superpower) {
    // –í–æ–∑–≤—Ä–∞—â–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é, –µ—Å–ª–∏ —Ç–∏–ø –Ω–µ –Ω–∞–π–¥–µ–Ω
    return superpowers.emotionalTelepatia as TestResult;
  }
  
  return superpower as TestResult;
}

/**
 * –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—å –¥–≤—É—Ö —Ç–∏–ø–æ–≤ —Å–≤–µ—Ä—Ö—Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–µ–π
 * @param {SuperpowerType} type1 - —Ç–∏–ø –ø–µ—Ä–≤–æ–π —Å–≤–µ—Ä—Ö—Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–∏
 * @param {SuperpowerType} type2 - —Ç–∏–ø –≤—Ç–æ—Ä–æ–π —Å–≤–µ—Ä—Ö—Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–∏
 * @returns {Compatibility} - –æ–±—ä–µ–∫—Ç —Å –æ–ø–∏—Å–∞–Ω–∏–µ–º —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏
 */
export function analyzeCompatibility(type1: SuperpowerType, type2: SuperpowerType): Compatibility {
  let compatibilityText = '';
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —Å–ø–µ—Ü–∏—Ñ–∏—á–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ –¥–ª—è —ç—Ç–æ–π –ø–∞—Ä—ã —Ç–∏–ø–æ–≤
  if (typeCompatibility[type1] && typeCompatibility[type1][type2]) {
    compatibilityText = typeCompatibility[type1][type2];
  } else if (typeCompatibility[type2] && typeCompatibility[type2][type1]) {
    compatibilityText = typeCompatibility[type2][type1];
  } else {
    // –û–±—â–µ–µ –æ–ø–∏—Å–∞–Ω–∏–µ, –µ—Å–ª–∏ —Å–ø–µ—Ü–∏—Ñ–∏—á–Ω–æ–≥–æ –Ω–µ—Ç
    compatibilityText = '–ò–Ω—Ç–µ—Ä–µ—Å–Ω–æ–µ —Å–æ—á–µ—Ç–∞–Ω–∏–µ! –£ –≤–∞—Å —Ä–∞–∑–Ω—ã–µ —Å–≤–µ—Ä—Ö—Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–∏, –∫–æ—Ç–æ—Ä—ã–µ –º–æ–≥—É—Ç –ø—Ä–µ–∫—Ä–∞—Å–Ω–æ –¥–æ–ø–æ–ª–Ω—è—Ç—å –¥—Ä—É–≥ –¥—Ä—É–≥–∞.';
  }
  
  // –û–ø—Ä–µ–¥–µ–ª—è–µ–º, –Ω–∞—Å–∫–æ–ª—å–∫–æ —Å–æ–≤–º–µ—Å—Ç–∏–º—ã —Ç–∏–ø—ã (–æ—Ç 1 –¥–æ 5)
  let compatibilityLevel = 3; // –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é —Å—Ä–µ–¥–Ω—è—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—å
  
  // –û–¥–∏–Ω–∞–∫–æ–≤—ã–µ —Ç–∏–ø—ã –æ–±—ã—á–Ω–æ —Ö–æ—Ä–æ—à–æ —Å–æ–≤–º–µ—Å—Ç–∏–º—ã
  if (type1 === type2) {
    compatibilityLevel = 4;
  }
  
  // –ù–µ–∫–æ—Ç–æ—Ä—ã–µ –ø–∞—Ä—ã –∏–º–µ—é—Ç –æ—Å–æ–±—É—é —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—å
  const highCompatibility = [
    ['emotionalTelepatia', 'soulHealer'],
    ['relationshipAlchemy', 'specialMomentCreator'],
    ['magneticAttraction', 'impossibilityMaster'],
    ['wisdomKeeper', 'soulHealer']
  ];
  
  const pairString1 = `${type1},${type2}`;
  const pairString2 = `${type2},${type1}`;
  
  if (highCompatibility.some(pair => `${pair[0]},${pair[1]}` === pairString1 || `${pair[0]},${pair[1]}` === pairString2)) {
    compatibilityLevel = 5;
  }
  
  // –°–æ—Å—Ç–∞–≤–ª—è–µ–º –æ–±—â—É—é —Å—Ç—Ä–æ—á–∫—É –∏–∑ –ø–µ—Å–Ω–∏ –¥–ª—è –ø–∞—Ä—ã
  let songLine = '';
  if (compatibilityLevel >= 4) {
    songLine = '–ú—ã —Å —Ç–æ–±–æ–π –¥–≤–∞ –ø–∞–∑–ª–∞ –∏–∑ —Ä–∞–∑–Ω—ã—Ö –∫–æ—Ä–æ–±–æ–∫, –∫—Ä–∞—è –Ω–µ —Å–æ–≤–ø–∞–¥–∞—é—Ç, –Ω–æ —É–∑–æ—Ä –æ–¥–∏–Ω üß©‚ú®';
  } else if (compatibilityLevel === 3) {
    songLine = '–ù–∞—à –ø–∞–∑–ª —Å–ª–æ–∂–∏–ª—Å—è, –ø—É—Å—Ç—å –Ω–µ –∏–¥–µ–∞–ª—å–Ω–æ, –Ω–æ —ç—Ç–æ –Ω–∞—à–∞ –∏—Å—Ç–æ—Ä–∏—è ‚Äì —É–Ω–∏–∫–∞–ª—å–Ω–∞—è, —Ä–µ–∞–ª—å–Ω–∞—è üìñüí´';
  } else {
    songLine = '–ü—É—Å—Ç—å –≤–µ—Å—å –º–∏—Ä —Ç–≤–µ—Ä–¥–∏—Ç, —á—Ç–æ –º—ã –Ω–µ —Å–æ–≤–ø–∞–¥–∞–µ–º, –Ω–æ –º—ã-—Ç–æ –∑–Ω–∞–µ–º, –∑–Ω–∞–µ–º, –∑–Ω–∞–µ–º üëÄ‚ú®';
  }
  
  const superpower1 = superpowers[type1];
  const superpower2 = superpowers[type2];
  
  return {
    compatibilityLevel,
    compatibilityText,
    songLine,
    emojis: `${superpower1.emoji} + ${superpower2.emoji}`,
    songUrl: "https://music.yandex.ru/album/35714443/track/136874790" // –ò—Å–ø–æ–ª—å–∑—É–µ–º URL –ø–µ—Å–Ω–∏
  };
}
